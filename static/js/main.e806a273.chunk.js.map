{"version":3,"sources":["pages/HomePage.module.scss","components/Spinner/Spinner.module.scss","configs/configs.js","services/BaseService.js","components/Spinner/Spinner.js","pages/components/LeagueTable.js","pages/components/AverageTable.js","pages/components/ProfileTable.js","pages/HomePage.js","serviceWorker.js","index.js"],"names":["module","exports","environment","imgurAuth","buildGETAxios","url","axios","method","Spinner","class","styles","loader","useStyles","makeStyles","table","minWidth","LeagueTable","leagues","classes","TableContainer","component","Paper","Table","className","aria-label","TableHead","TableRow","TableCell","TableBody","map","league","scope","aname","lname","cname","season","games","avg","year","sport","challenge","name","AverageTable","averages","average","hand","ProfileTable","profile","prefix","suffix","first","last","assn","pba","BASE_URL","WINDOW_OPTIONS","SORT_OPTIONS","HomePage","state","data","errorMessage","query","sortOption","windowOption","handleOnInputChange","e","preventDefault","target","value","setState","handleSearch","requesting","then","result","_","get","isEmpty","catch","this","isNil","pageNumber","pageContainer","centerText","inputContainer","type","onChange","searchInput","placeHolder","onKeyDown","key","onClick","resultContainer","renderProfile","renderAverageTable","renderLeagueTable","Component","Boolean","window","location","hostname","match","routing","exact","path","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e806a273.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageContainer\":\"HomePage_pageContainer__9eY93\",\"inputContainer\":\"HomePage_inputContainer__10wIc\",\"searchInput\":\"HomePage_searchInput__1s2gw\",\"resultContainer\":\"HomePage_resultContainer__3yv5e\",\"imageContainer\":\"HomePage_imageContainer__32khm\",\"inline\":\"HomePage_inline__3ADm2\",\"centerText\":\"HomePage_centerText__1Qlo1\",\"errorText\":\"HomePage_errorText__1LOco\",\"paginationContainer\":\"HomePage_paginationContainer__Gc9E9\",\"disabled\":\"HomePage_disabled__2tQjv\",\"pointer\":\"HomePage_pointer__1RDSu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Spinner_loader__3qpwL\",\"load6\":\"Spinner_load6__3rMhZ\",\"round\":\"Spinner_round__7YmOD\"};","const CONFIG = {\n  environment: 'DEV',\n  imgurAuth: 'Client-ID b067d5cb828ec5a',\n};\n\nmodule.exports = CONFIG;\n","import axios from 'axios';\nimport _ from 'lodash';\nimport CONFIG from '../configs/configs';\n\nexport function buildGETAxios(url) {\n  return axios({\n    url,\n    method: 'GET',\n })\n}\n","import React from 'react';\nimport styles from './Spinner.module.scss';\n\nexport default function Spinner() {\n  return (\n    <div class={styles.loader}>Loading...</div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nexport default function LeagueTable({ leagues }) {\n  const classes = useStyles();\n\n  return (\n    <TableContainer component={Paper}>\n      <h3>Leagues</h3>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Association Name</TableCell>\n            <TableCell>League Name</TableCell>\n            <TableCell>Team Name</TableCell>\n            <TableCell>Season</TableCell>\n            <TableCell># of Games</TableCell>\n            <TableCell>Average</TableCell>\n            <TableCell>Year</TableCell>\n            <TableCell>Sport</TableCell>\n            <TableCell>Is Challenge?</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {leagues.map((league) => (\n            <TableRow key={league.name}>\n              <TableCell component=\"th\" scope=\"row\">\n                {league.aname}\n              </TableCell>\n              <TableCell>{league.lname}</TableCell>\n              <TableCell>{league.cname}</TableCell>\n              <TableCell>{league.season}</TableCell>\n              <TableCell>{league.games}</TableCell>\n              <TableCell>{league.avg}</TableCell>\n              <TableCell>{league.year}</TableCell>\n              <TableCell>{league.sport}</TableCell>\n              <TableCell>{league.challenge}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nexport default function AverageTable({ averages }) {\n  const classes = useStyles();\n\n  return (\n    <TableContainer component={Paper}>\n      <h3>Averages</h3>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Year</TableCell>\n            <TableCell>Games</TableCell>\n            <TableCell>Average</TableCell>\n            <TableCell>Is a Challenge?</TableCell>\n            <TableCell>Sport</TableCell>\n            <TableCell>Hand</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {averages.map((average) => (\n            <TableRow key={average.name}>\n              <TableCell component=\"th\" scope=\"row\">\n                {average.year}\n              </TableCell>\n              <TableCell>{average.games}</TableCell>\n              <TableCell>{average.avg}</TableCell>\n              <TableCell>{average.challenge}</TableCell>\n              <TableCell>{average.sport}</TableCell>\n              <TableCell>{average.hand}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nexport default function ProfileTable({ profile }) {\n  const classes = useStyles();\n\n  return (\n    <TableContainer component={Paper}>\n      <h3>Profile</h3>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>ID</TableCell>\n            <TableCell>Name</TableCell>\n            <TableCell>Association</TableCell>\n            <TableCell>Member</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          <TableRow key={profile.prefix}>\n            <TableCell component=\"th\" scope=\"row\">\n              {`${profile.prefix}-${profile.suffix}`}\n            </TableCell>\n            <TableCell>{profile.first} {profile.last}</TableCell>\n            <TableCell>{profile.assn}</TableCell>\n            <TableCell>{profile.pba}</TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import React, { Component } from 'react';\nimport _ from 'lodash';\n\nimport { buildGETAxios } from '../services/BaseService';\nimport Spinner from '../components/Spinner/Spinner';\n\nimport LeagueTable from './components/LeagueTable';\nimport AverageTable from './components/AverageTable';\nimport ProfileTable from './components/ProfileTable';\n\nimport styles from './HomePage.module.scss';\n\nconst BASE_URL = 'https://api.scoreverify.com/usbc/';\nconst WINDOW_OPTIONS = ['all', 'day', 'week', 'month', 'year'];\nconst SORT_OPTIONS = ['time', 'viral', 'top'];\n\nexport default class HomePage extends Component {\n  state = {\n    data: null,\n    errorMessage: null,\n    query: '5495-24744',\n    sortOption: SORT_OPTIONS[0],\n    windowOption: WINDOW_OPTIONS[0],\n  };\n\n  handleOnInputChange = (e) => {\n    e.preventDefault();\n    const query = e.target.value;\n    this.setState({ query });\n  }\n\n  handleSearch = () => {\n    const { query } = this.state;\n\n    this.setState({ requesting: true }, () => {\n      buildGETAxios(`${BASE_URL}/5495-24744/json`).then((result) => {\n        const data = _.get(result, 'data');\n        if (!_.isEmpty(data)) {\n          this.setState({ data, requesting: false, errorMessage: null});\n        } else {\n          this.setState({ errorMessage: 'Nothing was found. Try another search?', data: null, requesting: false });\n        }\n      }).catch((errorMessage) => {\n        this.setState({ requesting: false, errorMessage });\n      });\n    })\n  }\n\n  renderAverageTable() {\n    const { data, errorMessage, requesting } = this.state;\n\n    const averages = _.get(data, 'Averages', null);\n    if (requesting) {\n      return (\n        <Spinner />\n      )\n    }\n\n    if (!_.isNil(averages)) {\n      return (\n        <AverageTable\n          averages={averages}\n        />\n      )\n    }\n\n    return null;\n  }\n\n  renderLeagueTable() {\n    const { data, errorMessage, requesting } = this.state;\n\n    const leagues = _.get(data, 'Leagues', null);\n    if (requesting) {\n      return (\n        <Spinner />\n      )\n    }\n\n    if (!_.isNil(leagues)) {\n      return (\n        <LeagueTable\n          leagues={leagues}\n        />\n      )\n    }\n\n    return null;\n  }\n\n  renderProfile() {\n    const { data, errorMessage, requesting } = this.state;\n\n    const profile = _.get(data, 'ID', null);\n    if (requesting) {\n      return (\n        <Spinner />\n      )\n    }\n\n    if (!_.isNil(profile)) {\n      return (\n        <ProfileTable\n          profile={profile}\n        />\n      )\n    }\n\n    return null;\n  }\n\n  render() {\n    const { pageNumber } = this.state;\n\n    return (\n      <div className={styles.pageContainer}>\n        <h3 className={styles.centerText}>Bowling User Score Search</h3>\n        <div className={styles.inputContainer}>\n          <div>\n            <input\n              type=\"search\"\n              onChange={this.handleOnInputChange}\n              className={styles.searchInput}\n              placeHolder='Search...'\n              onKeyDown={(e) => {\n                if (e.key === 'Enter') {\n                  this.handleSearch();\n                }\n              }}\n            />\n            <input type=\"submit\" value=\"Search\" onClick={this.handleSearch} />\n          </div>\n        </div>\n        <div className={styles.resultContainer}>\n          {this.renderProfile()}\n          <br />\n          {this.renderAverageTable()}\n          <br />\n          {this.renderLeagueTable()}\n        </div>\n      </div>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Route, BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\n\nimport HomePage from './pages/HomePage';\n\nimport * as serviceWorker from './serviceWorker';\n\nconst routing = (\n  <Router>\n    <div>\n      <Route exact path=\"/\" component={HomePage} />\n    </div>\n  </Router>\n)\n\nReactDOM.render(routing, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}